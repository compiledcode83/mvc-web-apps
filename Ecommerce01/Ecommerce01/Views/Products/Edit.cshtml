@model Ecommerce01.Models.Product

@{
    ViewBag.Title = "Modifica";
}

<h2>Modifica</h2>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Prodotto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.CompanyId)

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BarCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BarCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BarCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaxId, "TaxId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TaxId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaxId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Image)
               @* @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "form-control-label col-md-2" })
            <div class="col-md-10">
                <span class="btn btn-default btn-file">
                    @if (!string.IsNullOrEmpty(Model.Image))
                    {
                        <img src="@Url.Content(Model.Image)" alt="Image" style="width: 150px; height: 150px; max-width: 100%; height: auto;" />
                    }
                    @*@Html.TextBoxFor(model => model.ImageFile, new { type = "file", value = "test", @class = "input-file" })*@
                    @Html.TextBoxFor(model => model.ImageFile, null, new { type = "file", value = "test", @class = "input-file" })
                    @*null, new { type = "file", @class = "input-file" })*@
                </span>
            </div>
        </div>
       
        
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Ritorna", "Index", new { }, new { @class = "btn-outline-primary" })
                <input type="submit" value="Salva" class="btn btn-info" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/script.js")
}

@*@model ImageViewModel*@
@*public class ImageViewModel
    {
        public string Name { get; set; }

    mio public string Image { get; set; }
        public string FileName { get; set; }

         mio public HttpPostedFileBase ImageFile { get; set; }
        public HttpPostedFileBase ImageUpload { get; set; }
    }*@
@*<form action="" method="post" enctype="multipart/form-data">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div>
            Name:
            @Html.EditorFor(model => model.Name)
        </div>
        <div>
            Current uploaded file: mio Image
            @Html.DisplayFor(model => model.FileName)
        </div>
        <div>
            Image Upload:
            @Html.TextBoxFor(m => m.ImageUpload, new { type = "file", value = "test" })
        </div>
        <button type="submit">Save</button>

    </form>*@

