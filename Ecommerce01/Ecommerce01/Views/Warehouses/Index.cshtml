@model PagedList.IPagedList<Ecommerce01.Models.Warehouse>


@using PagedList.Mvc;
@{
    ViewBag.Title = "Magazzini";
}

<h2>Magazzini</h2>

<p>
    @Html.ActionLink("Crea Nuovo", "Create", new { }, new { @class = "btn btn-info" })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Departament.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Province.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().City.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Address)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Departament.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Province.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.ActionLink("Modifica", "Edit", new { id = item.WarehouseId }, new { @class = "btn btn-info" }) |
            @Html.ActionLink("Dettagli", "Details", new { id = item.WarehouseId }, new { @class = "btn btn-primary" }) |
            @Html.ActionLink("Elimina", "Delete", new { id = item.WarehouseId }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}
</table>
@if (Model.PageCount > 1)
{
    <h6>@Html.Raw(string.Format("Pagina: {0}, di: {1}", (Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), Model.PageCount))</h6>;
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter
    }));
}﻿